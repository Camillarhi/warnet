# Default values for cln.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: warnet

image:
  repository: elementsproject/lightningd
  pullPolicy: IfNotPresent
  tag: "v25.02"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels:
  app: "warnet"
  mission: "lightning"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

P2PPort: 9735
RPCPort: 9736
RestPort: 3010

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  exec:
    command:
      - "/bin/sh"
      - "-c"
      - "lightning-cli --network=regtest getinfo >/dev/null 2>&1"
  failureThreshold: 3
  initialDelaySeconds: 5
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 10
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 60
  exec:
    command:
      - "/bin/sh"
      - "-c"
      - "lightning-cli --network=regtest getinfo 2>/dev/null | grep -q 'id' || exit 1"

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

baseConfig: |
  log-level=info
  developer
  dev-fast-gossip
  bitcoin-rpcuser=user
  # bitcoind.rpcpass are set in configmap.yaml

config: ""

defaultConfig: ""

channels: []
