# Default values for eclair.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: warnet

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: acinq/eclair
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: 
  app: "warnet"
  mission: "lightning"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

ServerPort: 9735
RestPort: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /getinfo
    port: 8080
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 20
  timeoutSeconds: 5
readinessProbe:
  initialDelaySeconds: 10
  failureThreshold: 3
  periodSeconds: 10
  tcpSocket:
    port: 8080
startupProbe:
  initialDelaySeconds: 15
  periodSeconds: 10
  failureThreshold: 5
  timeoutSeconds: 30
  exec:
    command:
      - sh
      - -c
      - 'curl -s http://localhost:8080/getinfo | grep -q "blockHeight"'

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

baseConfig: |
  eclair.server.port=9735
  eclair.api.enabled=true
  eclair.api.password=foo
  eclair.api.port=8080
  eclair.bitcoind.rpcuser=user
  # zmq* and eclair.bitcoind.rpcpassword are set in configmap.yaml
 
config: ""

defaultConfig: ""

channels: []
